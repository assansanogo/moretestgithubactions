# first workflow to help you get started with Actions

name: Get results from day n-1 
env:
  time: 'TODAY'
  
# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]

      
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  # triggered at will
  workflow_dispatch:
    
    inputs:
      time:
        description: "date: mm-dd-yyyy (d+1)"
        required: True
        default: 'TODAY'
        
      loglevel:
        type: choice
        required: True
        description: Choose the debug level
        options:
        - INFO
        - DEBUG
        - MINIMAL
      
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - uses: szenius/set-timezone@v1.0
        with:
          timezoneLinux: "America/Los_Angeles"

      # Runs a single command using the runners shell (hello world)
      - name: Run a simple one-line script
        run: echo simple test to check that everything is alright
      
      # Runs a single command using the runners shell getting the date of yesterday
      # the code assumes a default Timezone of (LA)
      - name: get the date before yesterday

        run: |
          queried_date=$(date --date='-1 day' "+%m-%d-%Y")
          echo $queried_date
          wget "https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_daily_reports_us/${queried_date}.csv"
          echo $(ls ./${queried_date}.csv)
          cat ./${queried_date}.csv
          
      # step that sends the report by mail
      - name: send email
        run: |
          sudo apt-get update && sudo apt-get install python3-pip
          pip3 install sendgrid pdfkit
          python3 ./streamliner.py
        env: 
          'SENDER_EMAIL': 'assansanogo@gmail.com'
          'DEST_EMAIL': 'assansanogo@gmail.com'
          'SENDGRID_API_KEY': ${{secrets.SENDGRID}}
        
      # Runs a single command using the runners shell (grab the input parameters)
      - name: grab input parameter
        run: "echo  time is : ${{github.event.inputs.time}}"

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          git clone https://github.com/CSSEGISandData/COVID-19.git
          echo $(ls .)
          cd ./COVID-19/csse_covid_19_data/csse_covid_19_daily_reports_us
          
          echo $(ls ./*.csv | wc -l)
          my_var="${{github.event.inputs.time}}"
          if [[ ! -z "$my_var" ]] && [[ "${{github.event.inputs.loglevel}}"=="DEBUG" ]] ;then echo  "level: ${{github.event.inputs.loglevel}} - time is : $my_var"; 
          elif [[ ! -z "$my_var" ]] && [[ "${{github.event.inputs.loglevel}}"=="INFO" ]] ;then echo "time is : $my_var";
          else echo "the time was not set (either automatic pull or default params), defaulting to today's date"; fi
